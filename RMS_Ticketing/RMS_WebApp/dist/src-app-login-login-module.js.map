{"version":3,"sources":["webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.routing.ts","webpack:///./src/app/login/login.template.html","webpack:///./src/app/shared/model/Credential.ts","webpack:///./src/app/shared/model/EmployeeMaster.ts"],"names":[],"mappings":"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","file":"src-app-login-login-module.js","sourcesContent":["module.exports = \".topleft {\\r\\n  position: absolute;\\r\\n  top: 8px;\\r\\n  left: 16px;\\r\\n  font-size: 18px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixTQUFTO0VBQ1QsV0FBVztFQUNYLGdCQUFnQjtDQUNqQiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudG9wbGVmdCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogOHB4O1xyXG4gIGxlZnQ6IDE2cHg7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG59XHJcbiJdfQ== */\"","import { baseUrl } from '../GlobalShareCode';\r\nimport { Component, HostListener, OnInit, ViewChild, EventEmitter, Output } from '@angular/core';\r\n/////<reference path=\"../GlobalShareCode.ts\"/>// from '../GlobalShareCode';\r\nimport { Headers, RequestOptions, Http } from '@angular/http';\r\nimport { DataService } from '../services/DataService';\r\nimport { LoginService } from './login.service';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Credential } from '../shared/model/Credential';\r\nimport { EmployeeMaster } from '../shared/model/EmployeeMaster';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\nimport { BaseResponseWithData } from '../shared/model/BaseResponseModel';\r\nimport { Company } from '../shared/model/Company';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.template.html',\r\n  styleUrls: ['./login.component.css'],\r\n  providers: [LoginService]\r\n})\r\n\r\n\r\nexport class LoginComponent implements OnInit {\r\n\r\n  @ViewChild('f') form: FormGroup;\r\n  model: Credential = new Credential();\r\n  modelEmployeeMaster: EmployeeMaster = new EmployeeMaster();\r\n  lCompanys: any[];\r\n  logo: string; \r\n\r\n\r\n  constructor(private _service: LoginService,\r\n    private ds: DataService, private router: Router,\r\n    private sessionStorageService: SessionStorageService) {\r\n    this.logo = baseUrl + \"/assets/images/CMS_RMS_logo.jpg\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    localStorage.removeItem('access_token');\r\n    \r\n    //console.log(baseUrl);\r\n    //this.ds.ShowHideToasty({\r\n    //    title: 'Loading Data...Wait!!',\r\n    //    msg: '',\r\n    //    showClose: false,\r\n    //    theme: 'bootstrap',\r\n    //    type: 'wait',\r\n    //    closeOther: true\r\n    //});\r\n    //this._service.getCompany().subscribe((response: BaseResponseWithData<any>) => {\r\n    //    if (response.Success) {\r\n    //        if (response.Entity != null) {\r\n    //            this.lCompanys = response.Entity;\r\n    //        }\r\n    //    }\r\n    //    this.ds.ShowHideToasty();\r\n    //});\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    \r\n    if (this.form.valid) {\r\n      this.ds.ShowHideToasty({\r\n        title: 'Please Wait...',\r\n        msg: '',\r\n        showClose: false,\r\n        theme: 'bootstrap',\r\n        type: 'wait',\r\n        closeOther: true\r\n      });\r\n      const form = new FormData();\r\n      //form.append(\"CompanyID\", this.model.CompanyID);\r\n      form.append(\"Entity.UserID\", this.model.UserID);\r\n      form.append(\"Entity.Password\", this.model.Password);\r\n\r\n      this._service.getLogin(form).subscribe((response: BaseResponseWithData<any>) => {\r\n        \r\n        if (response.Success) {\r\n          localStorage.setItem(\"access_token\", response.UserToken.AccessToken);\r\n\r\n          if (response.Entity != null) {\r\n            //this.modelEmployeeMaster = response.Entity;\r\n            \r\n            this.sessionStorageService.store('userdetails', JSON.stringify(response.Entity));\r\n            \r\n            this.ds.ShowHideToasty({\r\n              title: 'Login Successfully..',\r\n              msg: '',\r\n              showClose: true,\r\n              theme: 'bootstrap',\r\n              type: 'success',\r\n              closeOther: true,\r\n              timeout: 5000\r\n            });\r\n            this.router.navigateByUrl('/TicketViewer');\r\n          }\r\n          //if (this.modelEmployeeMaster.ResetPassword) {\r\n          //            this.router.navigateByUrl('/ResetPassword');\r\n          //        }\r\n          //        else {\r\n          //            this.router.navigateByUrl('/Dashboard');\r\n          //        }\r\n        }\r\n        else {\r\n          this.ds.ShowHideToasty({\r\n            title: 'Login Failure..',\r\n            msg: 'Incorrect Credentials, Kindly Input Correct Credentials',\r\n            showClose: true,\r\n            theme: 'bootstrap',\r\n            type: 'error',\r\n            closeOther: true,\r\n          });\r\n\r\n        }\r\n      });\r\n\r\n\r\n\r\n      //this._service.getLogin(form).subscribe((response: BaseResponseWithData<any>) => {\r\n      //    if (response.Success) {\r\n      //        if (response.Entity != null) {\r\n      //            this.modelEmployeeMaster = response.Entity;\r\n      //            this.sessionStorageService.store('userdetails', JSON.stringify(response.Entity));\r\n      //            this.ds.ShowHideToasty({\r\n      //                title: 'Login Successfully..',\r\n      //                msg: '',\r\n      //                showClose: true,\r\n      //                theme: 'bootstrap',\r\n      //                type: 'success',\r\n      //                closeOther: true,\r\n      //                timeout: 5000\r\n      //            });\r\n      //            if (this.modelEmployeeMaster.ResetPassword) {\r\n      //                this.router.navigateByUrl('/ResetPassword');\r\n      //            }\r\n      //            else {\r\n      //                this.router.navigateByUrl('/Dashboard');\r\n      //            }\r\n      //        } else {\r\n      //            this.ds.ShowHideToasty({\r\n      //                title: 'Login Failure..',\r\n      //                msg: 'Incorrect Credentials, Kindly Input Correct Credentials',\r\n      //                showClose: true,\r\n      //                theme: 'bootstrap',\r\n      //                type: 'error',\r\n      //                closeOther: true,\r\n      //            });\r\n\r\n      //        }\r\n      //    }\r\n      //    else {\r\n      //        this.ds.ShowHideToasty({\r\n      //            title: 'Login Failure..',\r\n      //            msg: response.Message,\r\n      //            showClose: true,\r\n      //            theme: 'bootstrap',\r\n      //            type: 'error',\r\n      //            closeOther: true,\r\n      //        });\r\n      //    }\r\n      //});\r\n\r\n\r\n\r\n    }\r\n  }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login.component';\r\nimport { routing } from './login.routing';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n//import { DashboardComponent } from '../dashboard/dashbkcoard.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [routing, FormsModule, CommonModule],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\r\n    declarations: [LoginComponent]\r\n})\r\nexport class LoginModule { }\r\n","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\nimport { AuthGuard } from '../shared/Security/auth.guard';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponent,\r\n        data: {\r\n            breadcrumb: 'Login',\r\n            //icon: 'icofont-dashboard bg-c-blue',\r\n            //status: false\r\n    },\r\n    //canActivate: [AuthGuard]\r\n    }\r\n\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forChild(routes);  \r\n","module.exports = \"<!--bg-secondary-->\\r\\n<section class=\\\"login p-fixed d-flex text-center  common-img-bg\\\">\\r\\n  <!-- starts -->\\r\\n  <!--<img src=\\\"http://www.cms.com/wp-content/themes/cms/images/cms_footer_logo.jpg\\\" class=\\\"topleft\\\" width=\\\"322\\\" height=\\\"70\\\">-->\\r\\n  <div class=\\\"auth-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-12\\\">\\r\\n        <!-- Authentication card start -->\\r\\n        <div class=\\\"login-card card-body auth-body\\\">\\r\\n          <form class=\\\"md-float-material\\\" novalidate #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n            <div class=\\\"text-center\\\">\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"auth-box\\\">\\r\\n\\r\\n              <div class=\\\"row m-b-20\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                  <img src=\\\"{{logo}}\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n                <div class=\\\"row m-b-20\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <h3 class=\\\"text-center txt-primary\\\">LogIn</h3>\\r\\n                  </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"input-group\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.UserID\\\" name=\\\"userID\\\"\\r\\n                         required\\r\\n                         #userID=\\\"ngModel\\\"\\r\\n                         [ngClass]=\\\"{ 'form-control-danger': userID.invalid && userID.dirty, 'form-control-success': userID.valid && userID.dirty}\\\"\\r\\n                         placeholder=\\\"Username\\\">\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                </div>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\"\\r\\n                         [(ngModel)]=\\\"model.Password\\\"\\r\\n                         required\\r\\n                         #password=\\\"ngModel\\\"\\r\\n                         [ngClass]=\\\"{ 'form-control-danger': password.invalid && password.dirty, 'form-control-success': password.valid && password.dirty }\\\"\\r\\n                         placeholder=\\\"password\\\">\\r\\n                  <span class=\\\"md-line\\\"></span>\\r\\n                </div>\\r\\n                <div class=\\\"row m-t-25 text-left\\\">\\r\\n                  <div class=\\\"col-sm-6 col-xs-12\\\">\\r\\n                    <div class=\\\"checkbox-fade fade-in-primary\\\">\\r\\n                      <label>\\r\\n                        <input type=\\\"checkbox\\\" value=\\\"\\\">\\r\\n                        <span class=\\\"cr\\\"><i class=\\\"cr-icon icofont icofont-ui-check txt-primary\\\"></i></span>\\r\\n                        <span class=\\\"text-inverse\\\">Remember me</span>\\r\\n                      </label>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-6 col-xs-12 forgot-phone text-right\\\">\\r\\n                    <a [routerLink]=\\\"['/Login/ForgotPassword']\\\" class=\\\"text-right f-w-600 text-inverse\\\"> Forget Password?</a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row m-t-30\\\">\\r\\n                  <div class=\\\"col-md-12\\\">\\r\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-md btn-block waves-effect text-center m-b-20\\\"\\r\\n                            [ngClass]=\\\"{ 'disabled': !f.form.valid }\\\"\\r\\n                            [disabled]=\\\"!f.form.valid\\\">\\r\\n                      LOGIN\\r\\n                    </button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n</form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","﻿\r\nexport class Credential {\n    public CompanyID: string;\n    public UserID: string;\n    public Password: string;\n}\n\n","﻿export class EmployeeMaster {\n\n    public ID: number;\r\n    public EmpCode: string;\r\n    public EmpFullName: string;\r\n    public CompanyID: string;\r\n    public Active: string;\r\n    public ResetPassword: string;\r\n   \n\n}"],"sourceRoot":""}
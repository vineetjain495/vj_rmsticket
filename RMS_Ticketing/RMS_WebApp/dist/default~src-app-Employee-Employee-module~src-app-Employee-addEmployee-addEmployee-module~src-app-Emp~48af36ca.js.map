{"version":3,"sources":["webpack:///./node_modules/ng-multiselect-dropdown/fesm5/ng-multiselect-dropdown.js","webpack:///./src/app/Employee/Employee.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACiJ;AACpH;AACjB;;AAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU,cAAc,6BAA6B,EAAE;AACxE;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C,mCAAmC,0DAAY;AAC/C,4BAA4B,0DAAY;AACxC,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,wBAAwB,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,yBAAyB,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd;AACA,IAAI,wDAAU;AAC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","file":"default~src-app-Employee-Employee-module~src-app-Employee-addEmployee-addEmployee-module~src-app-Emp~48af36ca.js","sourcesContent":["import { __decorate } from 'tslib';\nimport { forwardRef, EventEmitter, ChangeDetectorRef, Input, Output, HostListener, Component, ChangeDetectionStrategy, ElementRef, Directive, Pipe, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\nvar ListItem = /** @class */ (function () {\r\n    function ListItem(source) {\r\n        if (typeof source === 'string' || typeof source === 'number') {\r\n            this.id = this.text = source;\r\n            this.isDisabled = false;\r\n        }\r\n        if (typeof source === 'object') {\r\n            this.id = source.id;\r\n            this.text = source.text;\r\n            this.isDisabled = source.isDisabled;\r\n        }\r\n    }\r\n    return ListItem;\r\n}());\n\nvar DROPDOWN_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(function () { return MultiSelectComponent; }),\r\n    multi: true\r\n};\r\nvar noop = function () { };\r\nvar Éµ0 = noop;\r\nvar MultiSelectComponent = /** @class */ (function () {\r\n    function MultiSelectComponent(cdr) {\r\n        this.cdr = cdr;\r\n        this._data = [];\r\n        this.selectedItems = [];\r\n        this.isDropdownOpen = true;\r\n        this._placeholder = \"Select\";\r\n        this._sourceDataType = null; // to keep note of the source data type. could be array of string/number/object\r\n        this._sourceDataFields = []; // store source data fields names\r\n        this.filter = new ListItem(this.data);\r\n        this.defaultSettings = {\r\n            singleSelection: false,\r\n            idField: \"id\",\r\n            textField: \"text\",\r\n            disabledField: \"isDisabled\",\r\n            enableCheckAll: true,\r\n            selectAllText: \"Select All\",\r\n            unSelectAllText: \"UnSelect All\",\r\n            allowSearchFilter: false,\r\n            limitSelection: -1,\r\n            clearSearchFilter: true,\r\n            maxHeight: 197,\r\n            itemsShowLimit: 999999999999,\r\n            searchPlaceholderText: \"Search\",\r\n            noDataAvailablePlaceholderText: \"No data available\",\r\n            closeDropDownOnSelection: false,\r\n            showSelectedItemsAtTop: false,\r\n            defaultOpen: false,\r\n            allowRemoteDataSearch: false\r\n        };\r\n        this.disabled = false;\r\n        this.onFilterChange = new EventEmitter();\r\n        this.onDropDownClose = new EventEmitter();\r\n        this.onSelect = new EventEmitter();\r\n        this.onDeSelect = new EventEmitter();\r\n        this.onSelectAll = new EventEmitter();\r\n        this.onDeSelectAll = new EventEmitter();\r\n        this.onTouchedCallback = noop;\r\n        this.onChangeCallback = noop;\r\n    }\r\n    Object.defineProperty(MultiSelectComponent.prototype, \"placeholder\", {\r\n        set: function (value) {\r\n            if (value) {\r\n                this._placeholder = value;\r\n            }\r\n            else {\r\n                this._placeholder = \"Select\";\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MultiSelectComponent.prototype, \"settings\", {\r\n        set: function (value) {\r\n            if (value) {\r\n                this._settings = Object.assign(this.defaultSettings, value);\r\n            }\r\n            else {\r\n                this._settings = Object.assign(this.defaultSettings);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MultiSelectComponent.prototype, \"data\", {\r\n        set: function (value) {\r\n            var _this = this;\r\n            if (!value) {\r\n                this._data = [];\r\n            }\r\n            else {\r\n                var firstItem = value[0];\r\n                this._sourceDataType = typeof firstItem;\r\n                this._sourceDataFields = this.getFields(firstItem);\r\n                this._data = value.map(function (item) {\r\n                    return typeof item === \"string\" || typeof item === \"number\"\r\n                        ? new ListItem(item)\r\n                        : new ListItem({\r\n                            id: item[_this._settings.idField],\r\n                            text: item[_this._settings.textField],\r\n                            isDisabled: item[_this._settings.disabledField]\r\n                        });\r\n                });\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MultiSelectComponent.prototype.onFilterTextChange = function ($event) {\r\n        this.onFilterChange.emit($event);\r\n    };\r\n    MultiSelectComponent.prototype.onItemClick = function ($event, item) {\r\n        if (this.disabled || item.isDisabled) {\r\n            return false;\r\n        }\r\n        var found = this.isSelected(item);\r\n        var allowAdd = this._settings.limitSelection === -1 || (this._settings.limitSelection > 0 && this.selectedItems.length < this._settings.limitSelection);\r\n        if (!found) {\r\n            if (allowAdd) {\r\n                this.addSelected(item);\r\n            }\r\n        }\r\n        else {\r\n            this.removeSelected(item);\r\n        }\r\n        if (this._settings.singleSelection && this._settings.closeDropDownOnSelection) {\r\n            this.closeDropdown();\r\n        }\r\n    };\r\n    MultiSelectComponent.prototype.writeValue = function (value) {\r\n        var _this = this;\r\n        if (value !== undefined && value !== null && value.length > 0) {\r\n            if (this._settings.singleSelection) {\r\n                try {\r\n                    if (value.length >= 1) {\r\n                        var firstItem = value[0];\r\n                        this.selectedItems = [\r\n                            typeof firstItem === \"string\" || typeof firstItem === \"number\"\r\n                                ? new ListItem(firstItem)\r\n                                : new ListItem({\r\n                                    id: firstItem[this._settings.idField],\r\n                                    text: firstItem[this._settings.textField],\r\n                                    isDisabled: firstItem[this._settings.disabledField]\r\n                                })\r\n                        ];\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // console.error(e.body.msg);\r\n                }\r\n            }\r\n            else {\r\n                var _data = value.map(function (item) {\r\n                    return typeof item === \"string\" || typeof item === \"number\"\r\n                        ? new ListItem(item)\r\n                        : new ListItem({\r\n                            id: item[_this._settings.idField],\r\n                            text: item[_this._settings.textField],\r\n                            isDisabled: item[_this._settings.disabledField]\r\n                        });\r\n                });\r\n                if (this._settings.limitSelection > 0) {\r\n                    this.selectedItems = _data.splice(0, this._settings.limitSelection);\r\n                }\r\n                else {\r\n                    this.selectedItems = _data;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.selectedItems = [];\r\n        }\r\n        this.onChangeCallback(value);\r\n    };\r\n    // From ControlValueAccessor interface\r\n    MultiSelectComponent.prototype.registerOnChange = function (fn) {\r\n        this.onChangeCallback = fn;\r\n    };\r\n    // From ControlValueAccessor interface\r\n    MultiSelectComponent.prototype.registerOnTouched = function (fn) {\r\n        this.onTouchedCallback = fn;\r\n    };\r\n    // Set touched on blur\r\n    MultiSelectComponent.prototype.onTouched = function () {\r\n        this.closeDropdown();\r\n        this.onTouchedCallback();\r\n    };\r\n    MultiSelectComponent.prototype.trackByFn = function (index, item) {\r\n        return item.id;\r\n    };\r\n    MultiSelectComponent.prototype.isSelected = function (clickedItem) {\r\n        var found = false;\r\n        this.selectedItems.forEach(function (item) {\r\n            if (clickedItem.id === item.id) {\r\n                found = true;\r\n            }\r\n        });\r\n        return found;\r\n    };\r\n    MultiSelectComponent.prototype.isLimitSelectionReached = function () {\r\n        return this._settings.limitSelection === this.selectedItems.length;\r\n    };\r\n    MultiSelectComponent.prototype.isAllItemsSelected = function () {\r\n        // get disabld item count\r\n        var itemDisabledCount = this._data.filter(function (item) { return item.isDisabled; }).length;\r\n        // take disabled items into consideration when checking\r\n        if ((!this.data || this.data.length === 0) && this._settings.allowRemoteDataSearch) {\r\n            return false;\r\n        }\r\n        return this._data.length === this.selectedItems.length + itemDisabledCount;\r\n    };\r\n    MultiSelectComponent.prototype.showButton = function () {\r\n        if (!this._settings.singleSelection) {\r\n            if (this._settings.limitSelection > 0) {\r\n                return false;\r\n            }\r\n            // this._settings.enableCheckAll = this._settings.limitSelection === -1 ? true : false;\r\n            return true; // !this._settings.singleSelection && this._settings.enableCheckAll && this._data.length > 0;\r\n        }\r\n        else {\r\n            // should be disabled in single selection mode\r\n            return false;\r\n        }\r\n    };\r\n    MultiSelectComponent.prototype.itemShowRemaining = function () {\r\n        return this.selectedItems.length - this._settings.itemsShowLimit;\r\n    };\r\n    MultiSelectComponent.prototype.addSelected = function (item) {\r\n        if (this._settings.singleSelection) {\r\n            this.selectedItems = [];\r\n            this.selectedItems.push(item);\r\n        }\r\n        else {\r\n            this.selectedItems.push(item);\r\n        }\r\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\r\n        this.onSelect.emit(this.emittedValue(item));\r\n    };\r\n    MultiSelectComponent.prototype.removeSelected = function (itemSel) {\r\n        var _this = this;\r\n        this.selectedItems.forEach(function (item) {\r\n            if (itemSel.id === item.id) {\r\n                _this.selectedItems.splice(_this.selectedItems.indexOf(item), 1);\r\n            }\r\n        });\r\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\r\n        this.onDeSelect.emit(this.emittedValue(itemSel));\r\n    };\r\n    MultiSelectComponent.prototype.emittedValue = function (val) {\r\n        var _this = this;\r\n        var selected = [];\r\n        if (Array.isArray(val)) {\r\n            val.map(function (item) {\r\n                selected.push(_this.objectify(item));\r\n            });\r\n        }\r\n        else {\r\n            if (val) {\r\n                return this.objectify(val);\r\n            }\r\n        }\r\n        return selected;\r\n    };\r\n    MultiSelectComponent.prototype.objectify = function (val) {\r\n        if (this._sourceDataType === 'object') {\r\n            var obj = {};\r\n            obj[this._settings.idField] = val.id;\r\n            obj[this._settings.textField] = val.text;\r\n            if (this._sourceDataFields.includes(this._settings.disabledField)) {\r\n                obj[this._settings.disabledField] = val.isDisabled;\r\n            }\r\n            return obj;\r\n        }\r\n        if (this._sourceDataType === 'number') {\r\n            return Number(val.id);\r\n        }\r\n        else {\r\n            return val.text;\r\n        }\r\n    };\r\n    MultiSelectComponent.prototype.toggleDropdown = function (evt) {\r\n        evt.preventDefault();\r\n        if (this.disabled && this._settings.singleSelection) {\r\n            return;\r\n        }\r\n        this._settings.defaultOpen = !this._settings.defaultOpen;\r\n        if (!this._settings.defaultOpen) {\r\n            this.onDropDownClose.emit();\r\n        }\r\n    };\r\n    MultiSelectComponent.prototype.closeDropdown = function () {\r\n        this._settings.defaultOpen = false;\r\n        // clear search text\r\n        if (this._settings.clearSearchFilter) {\r\n            this.filter.text = \"\";\r\n        }\r\n        this.onDropDownClose.emit();\r\n    };\r\n    MultiSelectComponent.prototype.toggleSelectAll = function () {\r\n        if (this.disabled) {\r\n            return false;\r\n        }\r\n        if (!this.isAllItemsSelected()) {\r\n            // filter out disabled item first before slicing\r\n            this.selectedItems = this._data.filter(function (item) { return !item.isDisabled; }).slice();\r\n            this.onSelectAll.emit(this.emittedValue(this.selectedItems));\r\n        }\r\n        else {\r\n            this.selectedItems = [];\r\n            this.onDeSelectAll.emit(this.emittedValue(this.selectedItems));\r\n        }\r\n        this.onChangeCallback(this.emittedValue(this.selectedItems));\r\n    };\r\n    MultiSelectComponent.prototype.getFields = function (inputData) {\r\n        var fields = [];\r\n        if (typeof inputData !== \"object\") {\r\n            return fields;\r\n        }\r\n        // tslint:disable-next-line:forin\r\n        for (var prop in inputData) {\r\n            fields.push(prop);\r\n        }\r\n        return fields;\r\n    };\r\n    MultiSelectComponent.ctorParameters = function () { return [\r\n        { type: ChangeDetectorRef }\r\n    ]; };\r\n    __decorate([\r\n        Input()\r\n    ], MultiSelectComponent.prototype, \"placeholder\", null);\r\n    __decorate([\r\n        Input()\r\n    ], MultiSelectComponent.prototype, \"disabled\", void 0);\r\n    __decorate([\r\n        Input()\r\n    ], MultiSelectComponent.prototype, \"settings\", null);\r\n    __decorate([\r\n        Input()\r\n    ], MultiSelectComponent.prototype, \"data\", null);\r\n    __decorate([\r\n        Output(\"onFilterChange\")\r\n    ], MultiSelectComponent.prototype, \"onFilterChange\", void 0);\r\n    __decorate([\r\n        Output(\"onDropDownClose\")\r\n    ], MultiSelectComponent.prototype, \"onDropDownClose\", void 0);\r\n    __decorate([\r\n        Output(\"onSelect\")\r\n    ], MultiSelectComponent.prototype, \"onSelect\", void 0);\r\n    __decorate([\r\n        Output(\"onDeSelect\")\r\n    ], MultiSelectComponent.prototype, \"onDeSelect\", void 0);\r\n    __decorate([\r\n        Output(\"onSelectAll\")\r\n    ], MultiSelectComponent.prototype, \"onSelectAll\", void 0);\r\n    __decorate([\r\n        Output(\"onDeSelectAll\")\r\n    ], MultiSelectComponent.prototype, \"onDeSelectAll\", void 0);\r\n    __decorate([\r\n        HostListener(\"blur\")\r\n    ], MultiSelectComponent.prototype, \"onTouched\", null);\r\n    MultiSelectComponent = __decorate([\r\n        Component({\r\n            selector: \"ng-multiselect-dropdown\",\r\n            template: \"<div tabindex=\\\"=0\\\" (blur)=\\\"onTouched()\\\" class=\\\"multiselect-dropdown\\\" (clickOutside)=\\\"closeDropdown()\\\">\\r\\n  <div [class.disabled]=\\\"disabled\\\">\\r\\n    <span tabindex=\\\"-1\\\" class=\\\"dropdown-btn\\\" (click)=\\\"toggleDropdown($event)\\\">\\r\\n      <span *ngIf=\\\"selectedItems.length == 0\\\">{{_placeholder}}</span>\\r\\n      <span class=\\\"selected-item\\\" *ngFor=\\\"let item of selectedItems;trackBy: trackByFn;let k = index\\\" [hidden]=\\\"k > _settings.itemsShowLimit-1\\\">\\r\\n        {{item.text}}\\r\\n        <a style=\\\"padding-top:2px;padding-left:2px;color:white\\\" (click)=\\\"onItemClick($event,item)\\\">x</a>\\r\\n      </span>\\r\\n      <span style=\\\"float:right !important;padding-right:4px\\\">\\r\\n        <span style=\\\"padding-right: 6px;\\\" *ngIf=\\\"itemShowRemaining()>0\\\">+{{itemShowRemaining()}}</span>\\r\\n        <span [ngClass]=\\\"_settings.defaultOpen ? 'dropdown-up' : 'dropdown-down'\\\"></span>\\r\\n      </span>\\r\\n    </span>\\r\\n  </div>\\r\\n  <div class=\\\"dropdown-list\\\" [hidden]=\\\"!_settings.defaultOpen\\\">\\r\\n    <ul class=\\\"item1\\\">\\r\\n      <li (click)=\\\"toggleSelectAll()\\\" *ngIf=\\\"(_data.length > 0 || _settings.allowRemoteDataSearch) && !_settings.singleSelection && _settings.enableCheckAll && _settings.limitSelection===-1\\\" class=\\\"multiselect-item-checkbox\\\" style=\\\"border-bottom: 1px solid #ccc;padding:10px\\\">\\r\\n        <input type=\\\"checkbox\\\" aria-label=\\\"multiselect-select-all\\\" [checked]=\\\"isAllItemsSelected()\\\" [disabled]=\\\"disabled || isLimitSelectionReached()\\\" />\\r\\n        <div>{{!isAllItemsSelected() ? _settings.selectAllText : _settings.unSelectAllText}}</div>\\r\\n      </li>\\r\\n      <li class=\\\"filter-textbox\\\" *ngIf=\\\"(_data.length>0 || _settings.allowRemoteDataSearch) && _settings.allowSearchFilter\\\">\\r\\n        <input type=\\\"text\\\" aria-label=\\\"multiselect-search\\\" [readOnly]=\\\"disabled\\\" [placeholder]=\\\"_settings.searchPlaceholderText\\\" [(ngModel)]=\\\"filter.text\\\" (ngModelChange)=\\\"onFilterTextChange($event)\\\">\\r\\n      </li>\\r\\n    </ul>\\r\\n    <ul class=\\\"item2\\\" [style.maxHeight]=\\\"_settings.maxHeight+'px'\\\">\\r\\n      <li *ngFor=\\\"let item of _data | multiSelectFilter:filter; let i = index;\\\" (click)=\\\"onItemClick($event,item)\\\" class=\\\"multiselect-item-checkbox\\\">\\r\\n        <input type=\\\"checkbox\\\" aria-label=\\\"multiselect-item\\\" [checked]=\\\"isSelected(item)\\\" [disabled]=\\\"disabled || (isLimitSelectionReached() && !isSelected(item)) || item.isDisabled\\\" />\\r\\n        <div>{{item.text}}</div>\\r\\n      </li>\\r\\n      <li class='no-data' *ngIf=\\\"_data.length == 0 && !_settings.allowRemoteDataSearch\\\">\\r\\n        <h5>{{_settings.noDataAvailablePlaceholderText}}</h5>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</div>\\r\\n\",\r\n            providers: [DROPDOWN_CONTROL_VALUE_ACCESSOR],\r\n            changeDetection: ChangeDetectionStrategy.OnPush,\r\n            styles: [\".multiselect-dropdown{position:relative;width:100%;font-size:inherit;font-family:inherit}.multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown .dropdown-btn .selected-item{border:1px solid #337ab7;margin-right:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left}.multiselect-dropdown .dropdown-btn .selected-item a{text-decoration:none}.multiselect-dropdown .dropdown-btn .selected-item:hover{box-shadow:1px 1px #959595}.multiselect-dropdown .dropdown-btn .dropdown-down{display:inline-block;top:10px;width:0;height:0;border-top:10px solid #adadad;border-left:10px solid transparent;border-right:10px solid transparent}.multiselect-dropdown .dropdown-btn .dropdown-up{display:inline-block;width:0;height:0;border-bottom:10px solid #adadad;border-left:10px solid transparent;border-right:10px solid transparent}.multiselect-dropdown .disabled>span{background-color:#eceeef}.dropdown-list{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list li{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list .filter-textbox{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list .filter-textbox input{border:0;width:100%;padding:0 0 0 26px}.dropdown-list .filter-textbox input:focus{outline:0}.multiselect-item-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox input[type=checkbox]:focus+div:before,.multiselect-item-checkbox input[type=checkbox]:hover+div:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox input[type=checkbox]:active+div:before{transition-duration:0s}.multiselect-item-checkbox input[type=checkbox]+div{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox input[type=checkbox]+div:before{box-sizing:content-box;content:\\\"\\\";color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:.4s}.multiselect-item-checkbox input[type=checkbox]+div:after{box-sizing:content-box;content:\\\"\\\";position:absolute;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox input[type=checkbox]:disabled+div:before{border-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:disabled:focus+div:before .multiselect-item-checkbox input[type=checkbox]:disabled:hover+div:before{background-color:inherit}.multiselect-item-checkbox input[type=checkbox]:disabled:checked+div:before{background-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:checked+div:after{content:\\\"\\\";transition:transform .2s ease-out;transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox input[type=checkbox]:checked+div:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}\"]\r\n        })\r\n    ], MultiSelectComponent);\r\n    return MultiSelectComponent;\r\n}());\n\nvar ClickOutsideDirective = /** @class */ (function () {\r\n    function ClickOutsideDirective(_elementRef) {\r\n        this._elementRef = _elementRef;\r\n        this.clickOutside = new EventEmitter();\r\n    }\r\n    ClickOutsideDirective.prototype.onClick = function (event, targetElement) {\r\n        if (!targetElement) {\r\n            return;\r\n        }\r\n        var clickedInside = this._elementRef.nativeElement.contains(targetElement);\r\n        if (!clickedInside) {\r\n            this.clickOutside.emit(event);\r\n        }\r\n    };\r\n    ClickOutsideDirective.ctorParameters = function () { return [\r\n        { type: ElementRef }\r\n    ]; };\r\n    __decorate([\r\n        Output()\r\n    ], ClickOutsideDirective.prototype, \"clickOutside\", void 0);\r\n    __decorate([\r\n        HostListener('document:click', ['$event', '$event.target'])\r\n    ], ClickOutsideDirective.prototype, \"onClick\", null);\r\n    ClickOutsideDirective = __decorate([\r\n        Directive({\r\n            selector: '[clickOutside]'\r\n        })\r\n    ], ClickOutsideDirective);\r\n    return ClickOutsideDirective;\r\n}());\n\nvar ListFilterPipe = /** @class */ (function () {\r\n    function ListFilterPipe() {\r\n    }\r\n    ListFilterPipe.prototype.transform = function (items, filter) {\r\n        var _this = this;\r\n        if (!items || !filter) {\r\n            return items;\r\n        }\r\n        return items.filter(function (item) { return _this.applyFilter(item, filter); });\r\n    };\r\n    ListFilterPipe.prototype.applyFilter = function (item, filter) {\r\n        if (typeof item.text === 'string' && typeof filter.text === 'string') {\r\n            return !(filter.text && item.text && item.text.toLowerCase().indexOf(filter.text.toLowerCase()) === -1);\r\n        }\r\n        else {\r\n            return !(filter.text && item.text && item.text.toString().toLowerCase().indexOf(filter.text.toString().toLowerCase()) === -1);\r\n        }\r\n    };\r\n    ListFilterPipe = __decorate([\r\n        Pipe({\r\n            name: 'multiSelectFilter',\r\n            pure: false\r\n        })\r\n    ], ListFilterPipe);\r\n    return ListFilterPipe;\r\n}());\n\nvar NgMultiSelectDropDownModule = /** @class */ (function () {\r\n    function NgMultiSelectDropDownModule() {\r\n    }\r\n    NgMultiSelectDropDownModule_1 = NgMultiSelectDropDownModule;\r\n    NgMultiSelectDropDownModule.forRoot = function () {\r\n        return {\r\n            ngModule: NgMultiSelectDropDownModule_1\r\n        };\r\n    };\r\n    var NgMultiSelectDropDownModule_1;\r\n    NgMultiSelectDropDownModule = NgMultiSelectDropDownModule_1 = __decorate([\r\n        NgModule({\r\n            imports: [CommonModule, FormsModule],\r\n            declarations: [MultiSelectComponent, ClickOutsideDirective, ListFilterPipe],\r\n            exports: [MultiSelectComponent]\r\n        })\r\n    ], NgMultiSelectDropDownModule);\r\n    return NgMultiSelectDropDownModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { MultiSelectComponent, NgMultiSelectDropDownModule, DROPDOWN_CONTROL_VALUE_ACCESSOR as Éµa, ClickOutsideDirective as Éµb, ListFilterPipe as Éµc };\n//# sourceMappingURL=ng-multiselect-dropdown.js.map\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Employee } from './addEmployee/addEmployee';\r\nimport { baseUrl } from '../GlobalShareCode';\r\nimport { CommonFunctionality } from '../app.commonFunctionality';\r\nimport { BaseResponseWithData } from '../shared/model/BaseResponseModel';\r\nimport { UpdateCallback } from '@angular/core/src/testability/testability';\r\nimport { UpdateTicket } from './updateTicket/UpdateTicket';\r\n/*After that we write all methods related to consume web in employee.service.ts  */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class EmployeeService {\r\n  empCode: string;\r\n  edit_empCode: string;\r\n  //url = 'https://localhost:44315/Api/Employee';  \r\n  constructor(private http: HttpClient,\r\n    private cf: CommonFunctionality, ) {\r\n    this.empCode = \"\";\r\n    this.edit_empCode = \"\";\r\n    this.getUserDetail();\r\n  }\r\n  /* getAllEmployee(): Observable< Employee[]> {  \r\n     return this.http.get<Employee[]>(baseUrl + '/AllEmployeeDetails');  \r\n   }  */\r\n  getEmployeeDetails() {\r\n    return this.http.get(baseUrl + '/Employee/EmployeeDetails');\r\n  }\r\n  getRolesDetail() {\r\n    return this.http.get(baseUrl + 'Employee/RolesDetail');\r\n  }\r\n  getLocationDetail() {\r\n    return this.http.get(baseUrl + 'Employee/LocationDetail');\r\n  }\r\n  getMSPDetail() {\r\n    return this.http.get(baseUrl + 'Employee/MSPDetail');\r\n  }\r\n  getEmployeeLimited() {\r\n    return this.http.get(baseUrl + 'Employee/Employeelimited');\r\n  }\r\n  getEmployeeLimitedByID(employee_code: string) {\r\n    return this.http.get(baseUrl + 'Employee/EmployeelimitedById/?employeeId=' + employee_code);\r\n  }\r\n  getEmployeeLocationByID(employee_code: string) {\r\n    return this.http.get(baseUrl + 'Employee/EmployeeLocationById/?employeeId=' + employee_code);\r\n  }\r\n  getEmployeeTicketsByID(employee_code: string) {\r\n    return this.http.get(baseUrl + 'Employee/EmployeeTicketsById/?employeeId=' + employee_code);\r\n  }\r\n\r\n  public getEmployeeById(employee_code: string) {\r\n    // return this.http.get<Employee>(this.url + '/GetEmployeeDetailsById/' + employeeId);\r\n    // return this.http.get(baseUrl + 'Employee/CheckEmployee/?employeeId=' + employee_code);\r\n    console.log(\"ser \" + employee_code);\r\n    return this.http.get(baseUrl + 'Employee/CheckEmployee/?employeeId=' + employee_code);\r\n    //return this.http.post(baseUrl + 'Employee/CheckEmployee', employee_code);\r\n    // return this.CallHttpGet<T>(baseUrl + 'Employee/CheckEmployee', employee_code, null);\r\n  }\r\n  getUserDetail() {\r\n    //console.log(\"user\");\r\n    this.cf.GetUserDetails().subscribe((data: BaseResponseWithData<any>) => {\r\n\r\n      if (data.Success) {\r\n        // console.log(data + \" \" + data.Entity + \" \" + data.Entity.EmpCode);\r\n        this.empCode = data.Entity.EmpCode;\r\n        console.log(this.empCode);\r\n      }\r\n    });\r\n  }\r\n\r\n  createEmployee(employee: Employee) {\r\n    console.log(employee);\r\n    return this.http.post(baseUrl + 'Employee/CreateEmployee', employee);\r\n  }\r\n\r\n  updateEmployee(employee: Employee) {\r\n    return this.http.post(baseUrl + 'Employee/UpdateEmployeeDetails', employee);\r\n  }\r\n  UpdateTicketAssign(employee: UpdateTicket) {\r\n    // console.log(employee);\r\n    return this.http.post('../Employee/UpdateTicketAssign', employee);\r\n  }\r\n  deleteEmployeeById(employeeid: string) {\r\n    // const httpOptions = { headers: new HttpHeaders({ 'Content-Type': 'application/json'}) };  \r\n    return this.http.delete(baseUrl + '/DeleteEmployeeDetails?emp_code=' + employeeid);\r\n  }\r\n  private CallHttpPost<T>(url: string, itemData: any, headers?: HttpHeaders): Observable<T> {\r\n    return this.http.post<T>(url, itemData, {\r\n      headers: headers\r\n    });\r\n  }\r\n  private CallHttpGet<T>(url: string, itemData: any, headers?: HttpHeaders): Observable<T> {\r\n\r\n    if (itemData != null) {\r\n      return this.http.get<T>(url, {\r\n        headers: headers,\r\n        params: { 'Value': itemData }\r\n      });\r\n    }\r\n    else {\r\n      return this.http.get<T>(url, {\r\n        headers: headers\r\n      });\r\n    }\r\n\r\n\r\n  }\r\n}  \r\n"],"sourceRoot":""}